// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: spaces.sql

package db

import (
	"context"
	"database/sql"

	"github.com/spacesprotocol/explorer-backend/pkg/types"
)

const insertVMetaOut = `-- name: InsertVMetaOut :exec
INSERT INTO vmetaouts (
    block_hash,
    txid,
    priority,
    name,
    value,
    scriptPubKey,
    action,
    burn_increment,
    signature,
    total_burned,
    claim_height,
    expire_height,
    script_error,
    reason
)
VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14)
`

type InsertVMetaOutParams struct {
	BlockHash     types.Bytes
	Txid          types.Bytes
	Priority      sql.NullInt64
	Name          sql.NullString
	Value         int64
	Scriptpubkey  types.Bytes
	Action        NullCovenantAction
	BurnIncrement sql.NullInt64
	Signature     *types.Bytes
	TotalBurned   sql.NullInt64
	ClaimHeight   sql.NullInt64
	ExpireHeight  sql.NullInt64
	ScriptError   sql.NullString
	Reason        sql.NullString
}

func (q *Queries) InsertVMetaOut(ctx context.Context, arg InsertVMetaOutParams) error {
	_, err := q.db.ExecContext(ctx, insertVMetaOut,
		arg.BlockHash,
		arg.Txid,
		arg.Priority,
		arg.Name,
		arg.Value,
		arg.Scriptpubkey,
		arg.Action,
		arg.BurnIncrement,
		arg.Signature,
		arg.TotalBurned,
		arg.ClaimHeight,
		arg.ExpireHeight,
		arg.ScriptError,
		arg.Reason,
	)
	return err
}
