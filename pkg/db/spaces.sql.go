// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: spaces.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
	"github.com/spacesprotocol/explorer-backend/pkg/types"
)

const deleteRollouts = `-- name: DeleteRollouts :exec
DELETE FROM rollouts
`

func (q *Queries) DeleteRollouts(ctx context.Context) error {
	_, err := q.db.Exec(ctx, deleteRollouts)
	return err
}

const insertRollout = `-- name: InsertRollout :exec
INSERT INTO rollouts (
    name,
    bid,
    target
)
VALUES ($1, $2, $3)
`

type InsertRolloutParams struct {
	Name   string
	Bid    int64
	Target int64
}

func (q *Queries) InsertRollout(ctx context.Context, arg InsertRolloutParams) error {
	_, err := q.db.Exec(ctx, insertRollout, arg.Name, arg.Bid, arg.Target)
	return err
}

const insertVMetaOut = `-- name: InsertVMetaOut :exec
INSERT INTO vmetaouts (
    block_hash,
    txid,
    priority,
    name,
    value,
    scriptPubKey,
    action,
    burn_increment,
    signature,
    total_burned,
    claim_height,
    expire_height,
    script_error,
    reason
)
VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14)
`

type InsertVMetaOutParams struct {
	BlockHash     types.Bytes
	Txid          types.Bytes
	Priority      pgtype.Int8
	Name          pgtype.Text
	Value         pgtype.Int8
	Scriptpubkey  *types.Bytes
	Action        NullCovenantAction
	BurnIncrement pgtype.Int8
	Signature     *types.Bytes
	TotalBurned   pgtype.Int8
	ClaimHeight   pgtype.Int8
	ExpireHeight  pgtype.Int8
	ScriptError   pgtype.Text
	Reason        pgtype.Text
}

func (q *Queries) InsertVMetaOut(ctx context.Context, arg InsertVMetaOutParams) error {
	_, err := q.db.Exec(ctx, insertVMetaOut,
		arg.BlockHash,
		arg.Txid,
		arg.Priority,
		arg.Name,
		arg.Value,
		arg.Scriptpubkey,
		arg.Action,
		arg.BurnIncrement,
		arg.Signature,
		arg.TotalBurned,
		arg.ClaimHeight,
		arg.ExpireHeight,
		arg.ScriptError,
		arg.Reason,
	)
	return err
}
